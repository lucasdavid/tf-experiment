setup:
  tf_seed: 421
  paths:
    data: "./data"
    tensorboard: "{report_dir}"
    best: "{report_dir}/best.h5"
    ckpt: "./models/cifar10/backup/"
    export: "{report_dir}/final"
    train_history: "{report_dir}/train-history.csv"
    valid_report: "{report_dir}/valid-report.csv"
dataset:
  load:
    name: cifar10
    data_dir: "./data/"
    splits:
      - train[:80%]
      - train[80%:]
      - test
  prepare:
    batch_size: 64
    sizes: [32, 32]
    buffer_size: auto
    parallel_calls: auto
    drop_remainder: true
    task: classification
    classes: &classes 10
    augmentation:
      policy: true
      config:
        brightness_delta: 0.2
        saturation_lower: 0.5
        saturation_upper: 1.0
        contrast_lower: 0.5
        contrast_upper: 1.5
        hue_delta: 0.0
    preprocess_fn: "keras.applications.resnet_v2.preprocess_input"
model:
  input_shape: [32, 32, 3]
  head:
    name: rn50_clf_cifar10
    units: *classes
    activation: softmax
    dropout_rate: 0.2
  backbone:
    architecture: ResNet50V2
    weights: imagenet
    pooling: avg
    trainable: false
training:
  perform: true
  loss: SparseCategoricalCrossentropy
  optimizer:
    class_name: sgd
    config: &momentum
      learning_rate: 0.1
      momentum: 0.9
      nesterov: true
  metrics:
    - SparseCategoricalAccuracy
    - SparseTopKCategoricalAccuracy
    # - precision
    # - recall
  config:
    epochs: &epochs 2
    verbose: 1
  callbacks: &callbacks
    - TerminateOnNaN
    - class_name: EarlyStopping
      config:
        patience: 50
        verbose: 1
    - class_name: ReduceLROnPlateau
      config:
        factor: 0.5
        patience: 10
        verbose: 1
    - class_name: TensorBoard
      config:
        log_dir: "./logs/"
        histogram_freq: 1
        profile_batch: 0
        write_graph: true
      override:
        log_dir: paths.tensorboard
    - class_name: CSVLogger
      config:
        filename: "./history.csv"
        append: true
      override:
        filename: paths.train_history
    - class_name: ModelCheckpoint
      config:
        verbose: 1
        filepath: "./best.h5"
        save_best_only: true
        save_weights_only: true
      override:
        filepath: paths.best
    - class_name: BackupAndRestore
      config:
        backup_dir: "/tmp/ckpt"
      override:
        backup_dir: paths.ckpt
  finetune:
    unfreeze:
      layers: 'conv5_block1_1_conv'
      freeze_bn: true
    optimizer:
      class_name: sgd
      config:
        <<: *momentum
        learning_rate: 0.001
    config:
      epochs: 4
      initial_epoch: *epochs
    callbacks: *callbacks
evaluation:
  task: sparse_classification_multiclass
  report_path: "{valid_report}"
