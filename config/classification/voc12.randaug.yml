setup:
  tf_seed: 41820
  precision_policy: mixed_float16
  gpus_with_memory_growth: true
  paths:
    data: &paths_data "./data"
    tensorboard: "{report_dir}"
    best: "{report_dir}/best.h5"
    ckpt: "./logs/voc12/baseline/backup/"
    export: "{report_dir}/final"
    train_history: "{report_dir}/train-history.csv"
    valid_report: "{report_dir}/valid-report.csv"
dataset:
  load:
    name: "voc/2012"
    data_dir: *paths_data
    splits:
      - train
      - validation
      - validation
  prepare:
    batch_size: 64
    sizes: [512, 512, 3]
    buffer_size: auto
    parallel_calls: auto
    drop_remainder: true
    task: classification_multilabel_from_detection
    classes: &classes 20
    keys:
      - image
      - label
    augmentation:
      policy:
        class_name: RandAug
        config:
          n: 3
          m: 7
          seed: 10344
      over: batches
      as_numpy: true
    shuffle:
      buffer_size: 1000
      seed: 4081
      reshuffle_each_iteration: true
    preprocess_fn: "keras.applications.resnet_v2.preprocess_input"
model:
  input_shape: [512, 512, 3]
  head:
    name: voc12_ml
    units: *classes
    activation: sigmoid
    dropout_rate: 0.2
    kernel_regularizer: null
    kernel_initializer: null
    layer_class: dense
  backbone:
    architecture: ResNet101V2
    weights: imagenet
    pooling: avg
    trainable: false
training:
  perform: true
  loss: BinaryCrossentropy
  optimizer:
    class_name: sgd
    config: &momentum
      learning_rate: 0.01
      momentum: 0.9
      nesterov: true
  metrics:
    - BinaryAccuracy
    - Precision
    - Recall
  config:
    epochs: &epochs 50
    verbose: 1
  callbacks: &callbacks
    - TerminateOnNaN
    - class_name: EarlyStopping
      config:
        patience: 50
        verbose: 1
    - class_name: ReduceLROnPlateau
      config:
        factor: 0.5
        patience: 10
        verbose: 1
    - class_name: TensorBoard
      config:
        log_dir: "./logs/"
        histogram_freq: 1
        profile_batch: 0
        write_graph: true
      override:
        log_dir: paths.tensorboard
    - class_name: CSVLogger
      config:
        filename: "./history.csv"
        append: true
      override:
        filename: paths.train_history
    - class_name: ModelCheckpoint
      config:
        verbose: 1
        filepath: "./best.h5"
        save_best_only: true
        save_weights_only: true
      override:
        filepath: paths.best
    - class_name: BackupAndRestore
      config:
        backup_dir: "/tmp/ckpt"
      override:
        backup_dir: paths.ckpt
  finetune:
    unfreeze:
      layers: 'conv5_block1_1_conv'
      freeze_bn: true
    optimizer:
      class_name: sgd
      config:
        <<: *momentum
        learning_rate: 0.001
    config:
      epochs: 100
      initial_epoch: *epochs
    callbacks: *callbacks
evaluation:
  task: classification_multilabel
  report_path: "{valid_report}"
